using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EAHT_Engine
{
    /// <summary>
    /// <para>Class to handle connection and data retrieval methods for the application </para>
    /// <para>Guide can be found in week 5 lecture slides. 
    /// Much of the code below has been copied and modified from the slides and the originals are included for reference.</para>
    /// <para>Lecture slides delivered by Dr. Christina Luca as part of Anglia Ruskin University - Computer Science BEng (Year 2) Software Engineering Module October 2019 </para>
    /// </summary>
    public class DbConnection
    {
        /// <summary>
        /// Below attributes are taken from week 5 lecture slides; Original code:
        /// <code>
        /// privatestringconnectionStr;
        /// //the SqlConnection object used to store the connection to the database 
        /// System.Data.SqlClient.SqlConnection connectionToDB;
        /// // the DataAdapter object used to open a table of the database
        /// private System.Data.SqlClient.SqlDataAdapter dataAdapter;
        /// </code>
        /// </summary>
        private readonly string connectionString = Properties.Settings.Default.DbConnection;
        private System.Data.SqlClient.SqlConnection dbConnection;
        private System.Data.SqlClient.SqlDataAdapter dataAdapter;

        /// <summary>
        /// Sets the connection string for the database connection
        /// Original code from lecture slides:
        /// <code>
        /// public DatabaseConnection(string connectionStr)
        /// {
        ///     this.connectionStr= connectionStr;
        /// }
        /// </code>
        /// </summary>
        /// <param name="connectionStr">Connection string for the database</param>
        public DbConnection(string connectionStr) 
        { 
            this.connectionString = connectionStr; 
        }

        /// <summary>
        /// Creates and opens a connection to the database
        /// Original code from lecture slides:
        /// <code>
        /// // Open the connection
        /// public void openConnection()
        /// {
        ///     // create the connection to the database as an instance of 
        ///     System.Data.SqlClient.SqlConnection connectionToDB = new System.Data.SqlClient.SqlConnection(connectionStr);
        ///     //open the connection
        ///     connectionToDB.Open();
        /// }
        /// </code>
        /// </summary>
        public System.Data.SqlClient.SqlConnection OpenConnection()
        {
            // create the connection to the database
            dbConnection = new System.Data.SqlClient.SqlConnection(connectionString);
            //open the connection
            dbConnection.Open();
            return dbConnection;
        }

        /// <summary>
        /// Closes the connection to the database.
        /// Original code from lecture slides:
        /// <code>
        /// // Close the connection
        /// public void closeConnection()
        /// {
        ///     //close the connection to the database
        ///     connectionToDB.Close();
        /// }
        /// </code>
        /// </summary>
        public void CloseConnection()
        {
            //close the connection to the database
            dbConnection.Close();
        }

        /// <summary>
        /// Get the dataset returned by the SQL statement when executed on the connected database. 
        /// Original code from lecture slides:
        /// <code>
        /// // Get the data set generated by the sqlStatement
        /// public DataSet getDataSet(string sqlStatement)
        /// {
        ///     DataSetdataSet;
        ///     // create the object dataAdapterto manipulate a table from the database StudentDissertationsspecified by connectionToDB
        ///     dataAdapter= newSystem.Data.SqlClient.SqlDataAdapter(sqlStatement,       connectionToDB);
        ///     // create the dataset
        ///     dataSet= newcSystem.Data.DataSet();
        ///     dataAdapter.Fill(dataSet);
        ///     //return the dataSet
        ///     return dataSet;
        /// }
        /// </code>
        /// </summary>
        /// <param name="sqlStatement">An SQL statement to execute in the database</param>
        /// <returns>The dataset output by the input SQL statement</returns>
        public System.Data.DataSet GetDataSet(string sqlStatement)
        {
            System.Data.DataSet dataSet;
            // create the object dataAdapter
            dataAdapter = new System.Data.SqlClient.SqlDataAdapter(sqlStatement, dbConnection);
            // create the dataset
            dataSet= new System.Data.DataSet();
            dataAdapter.Fill(dataSet);
            //return the dataSet
            return dataSet;
        }
        /// <summary>
        /// executes a SQL statement in the database
        /// </summary>
        /// <param name="nonQuery"></param>
        public System.Data.SqlClient.SqlCommand GetSqlCommand(string nonQuery)
        {
            System.Data.SqlClient.SqlCommand sql = new System.Data.SqlClient.SqlCommand(nonQuery);
            return sql;
        }
    }
}
